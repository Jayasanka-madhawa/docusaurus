"use strict";(self.webpackChunkmy_docs=self.webpackChunkmy_docs||[]).push([[197],{6775:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>o,frontMatter:()=>d,metadata:()=>i,toc:()=>h});const i=JSON.parse('{"id":"api/classes/Client","title":"Client","description":"nervoscan-js-sdk v1.0.5","source":"@site/docs/api/classes/Client.md","sourceDirName":"api/classes","slug":"/api/classes/Client","permalink":"/docusaurus/docs/api/classes/Client","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/classes/Client.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"README","permalink":"/docusaurus/docs/api/"},"next":{"title":"EmptyVideoError","permalink":"/docusaurus/docs/api/classes/EmptyVideoError"}}');var r=n(4848),l=n(8453);const d={},t=void 0,c={},h=[{value:"Methods",id:"methods",level:2},{value:"<del>checkResults()</del>",id:"checkresults",level:3},{value:"Parameters",id:"parameters",level:4},{value:"jobID",id:"jobid",level:5},{value:"Returns",id:"returns",level:4},{value:"Deprecated",id:"deprecated",level:4},{value:"Throws",id:"throws",level:4},{value:"Throws",id:"throws-1",level:4},{value:"Throws",id:"throws-2",level:4},{value:"Throws",id:"throws-3",level:4},{value:"<del>getResults()</del>",id:"getresults",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"jobID",id:"jobid-1",level:5},{value:"Returns",id:"returns-1",level:4},{value:"Deprecated",id:"deprecated-1",level:4},{value:"Throws",id:"throws-4",level:4},{value:"Throws",id:"throws-5",level:4},{value:"Throws",id:"throws-6",level:4},{value:"Throws",id:"throws-7",level:4},{value:"Throws",id:"throws-8",level:4},{value:"initialize()",id:"initialize",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"username",id:"username",level:5},{value:"password",id:"password",level:5},{value:"serverType",id:"servertype",level:5},{value:"Returns",id:"returns-2",level:4},{value:"Throws",id:"throws-9",level:4},{value:"initializeStreaming()",id:"initializestreaming",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"videoStream",id:"videostream",level:5},{value:"videoElement",id:"videoelement",level:5},{value:"Returns",id:"returns-3",level:4},{value:"setOnDisconnection()",id:"setondisconnection",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"callback",id:"callback",level:5},{value:"Returns",id:"returns-4",level:4},{value:"setOnError()",id:"setonerror",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"callback",id:"callback-1",level:5},{value:"Returns",id:"returns-5",level:4},{value:"setOnFinalResults()",id:"setonfinalresults",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"callback",id:"callback-2",level:5},{value:"Returns",id:"returns-6",level:4},{value:"setOnWindowResults()",id:"setonwindowresults",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"callback",id:"callback-3",level:5},{value:"Returns",id:"returns-7",level:4},{value:"startStreaming()",id:"startstreaming",level:3},{value:"Returns",id:"returns-8",level:4},{value:"Throws",id:"throws-10",level:4},{value:"Throws",id:"throws-11",level:4},{value:"Throws",id:"throws-12",level:4},{value:"Throws",id:"throws-13",level:4},{value:"Throws",id:"throws-14",level:4},{value:"stopStreaming()",id:"stopstreaming",level:3},{value:"Returns",id:"returns-9",level:4},{value:"uploadVideo()",id:"uploadvideo",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"videoBlob",id:"videoblob",level:5},{value:"Returns",id:"returns-10",level:4},{value:"Throws",id:"throws-15",level:4},{value:"Throws",id:"throws-16",level:4},{value:"Throws",id:"throws-17",level:4},{value:"Throws",id:"throws-18",level:4},{value:"Throws",id:"throws-19",level:4},{value:"Throws",id:"throws-20",level:4},{value:"Throws",id:"throws-21",level:4},{value:"getInstance()",id:"getinstance",level:3},{value:"Returns",id:"returns-11",level:4}];function a(e){const s={a:"a",blockquote:"blockquote",code:"code",del:"del",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",hr:"hr",p:"p",strong:"strong",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:(0,r.jsx)(s.a,{href:"/docusaurus/docs/api/",children:(0,r.jsx)(s.strong,{children:"nervoscan-js-sdk v1.0.5"})})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.a,{href:"/docusaurus/docs/api/globals",children:"nervoscan-js-sdk"})," / Client"]}),"\n",(0,r.jsx)(s.h1,{id:"class-client",children:"Class: Client"}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L12",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:12"})]}),"\n",(0,r.jsx)(s.p,{children:"Client class for interacting with the Nervoscan API.\nThis class provides methods for authentication, video upload, and result retrieval."}),"\n",(0,r.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(s.h3,{id:"checkresults",children:(0,r.jsx)(s.del,{children:"checkResults()"})}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"checkResults"}),"(",(0,r.jsx)(s.code,{children:"jobID"}),"): ",(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.code,{children:"any"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L108",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:108"})]}),"\n",(0,r.jsx)(s.p,{children:"Checks the status of a video processing job.\n\u26a0\ufe0f This function is deprecated and will be removed in a future version."}),"\n",(0,r.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(s.h5,{id:"jobid",children:"jobID"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"string"})}),"\n",(0,r.jsx)(s.p,{children:"The job ID to check"}),"\n",(0,r.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.code,{children:"any"}),">"]}),"\n",(0,r.jsx)(s.p,{children:"The job status"}),"\n",(0,r.jsx)(s.h4,{id:"deprecated",children:"Deprecated"}),"\n",(0,r.jsx)(s.p,{children:"Use setOnWindowResults() and setOnFinalResults() instead"}),"\n",(0,r.jsx)(s.h4,{id:"throws",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the client is not initialized"}),"\n",(0,r.jsx)(s.h4,{id:"throws-1",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the access token is invalid"}),"\n",(0,r.jsx)(s.h4,{id:"throws-2",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the username is invalid. The user should reinitialize the client with the correct credentials. Run Client.initialize()"}),"\n",(0,r.jsx)(s.h4,{id:"throws-3",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the password is invalid. The user should reinitialize the client with the correct credentials. Run Client.initialize()"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"getresults",children:(0,r.jsx)(s.del,{children:"getResults()"})}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"getResults"}),"(",(0,r.jsx)(s.code,{children:"jobID"}),"): ",(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.code,{children:"any"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L136",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:136"})]}),"\n",(0,r.jsx)(s.p,{children:"Retrieves the results for a completed video processing job.\n\u26a0\ufe0f This function is deprecated and will be removed in a future version."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsx)(s.h5,{id:"jobid-1",children:"jobID"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"string"})}),"\n",(0,r.jsx)(s.p,{children:"The job ID to get results for"}),"\n",(0,r.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.code,{children:"any"}),">"]}),"\n",(0,r.jsx)(s.p,{children:"The job results"}),"\n",(0,r.jsx)(s.h4,{id:"deprecated-1",children:"Deprecated"}),"\n",(0,r.jsx)(s.p,{children:"Use setOnWindowResults() and setOnFinalResults() instead"}),"\n",(0,r.jsx)(s.h4,{id:"throws-4",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the client is not initialized"}),"\n",(0,r.jsx)(s.h4,{id:"throws-5",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the access token is invalid"}),"\n",(0,r.jsx)(s.h4,{id:"throws-6",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the job has no scan data"}),"\n",(0,r.jsx)(s.h4,{id:"throws-7",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the username is invalid. The user should reinitialize the client with the correct credentials. Run Client.initialize()"}),"\n",(0,r.jsx)(s.h4,{id:"throws-8",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the password is invalid. The user should reinitialize the client with the correct credentials. Run Client.initialize()"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"initialize",children:"initialize()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"initialize"}),"(",(0,r.jsx)(s.code,{children:"username"}),", ",(0,r.jsx)(s.code,{children:"password"}),", ",(0,r.jsx)(s.code,{children:"serverType"}),"): ",(0,r.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L55",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:55"})]}),"\n",(0,r.jsx)(s.p,{children:"Initializes the client with user credentials and sets the backend URL."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,r.jsx)(s.h5,{id:"username",children:"username"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"string"})}),"\n",(0,r.jsx)(s.p,{children:"The username for authentication"}),"\n",(0,r.jsx)(s.h5,{id:"password",children:"password"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"string"})}),"\n",(0,r.jsx)(s.p,{children:"The password for authentication"}),"\n",(0,r.jsx)(s.h5,{id:"servertype",children:"serverType"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"string"})," = ",(0,r.jsx)(s.code,{children:"'server'"})]}),"\n",(0,r.jsx)(s.p,{children:"The type of server to use ('server' or 'serverless'). Defaults to 'server'"}),"\n",(0,r.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"void"})}),"\n",(0,r.jsx)(s.h4,{id:"throws-9",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the server type is invalid"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"initializestreaming",children:"initializeStreaming()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"initializeStreaming"}),"(",(0,r.jsx)(s.code,{children:"videoStream"}),", ",(0,r.jsx)(s.code,{children:"videoElement"}),"): ",(0,r.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L185",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:185"})]}),"\n",(0,r.jsx)(s.p,{children:"Initializes the streaming manager."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,r.jsx)(s.h5,{id:"videostream",children:"videoStream"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"MediaStream"})}),"\n",(0,r.jsx)(s.p,{children:"The video stream to stream"}),"\n",(0,r.jsx)(s.h5,{id:"videoelement",children:"videoElement"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"HTMLVideoElement"})}),"\n",(0,r.jsx)(s.p,{children:"The video element to stream to"}),"\n",(0,r.jsx)(s.h4,{id:"returns-3",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"void"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"setondisconnection",children:"setOnDisconnection()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"setOnDisconnection"}),"(",(0,r.jsx)(s.code,{children:"callback"}),"): ",(0,r.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L176",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:176"})]}),"\n",(0,r.jsx)(s.p,{children:"Sets a callback function to handle disconnection."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,r.jsx)(s.h5,{id:"callback",children:"callback"}),"\n",(0,r.jsxs)(s.p,{children:["() => ",(0,r.jsx)(s.code,{children:"void"})]}),"\n",(0,r.jsx)(s.p,{children:"Function to be called when the connection is lost. Takes no parameters."}),"\n",(0,r.jsx)(s.h4,{id:"returns-4",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"void"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"setonerror",children:"setOnError()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"setOnError"}),"(",(0,r.jsx)(s.code,{children:"callback"}),"): ",(0,r.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L168",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:168"})]}),"\n",(0,r.jsx)(s.p,{children:"Sets a callback function to handle errors."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,r.jsx)(s.h5,{id:"callback-1",children:"callback"}),"\n",(0,r.jsxs)(s.p,{children:["(",(0,r.jsx)(s.code,{children:"error"}),") => ",(0,r.jsx)(s.code,{children:"void"})]}),"\n",(0,r.jsx)(s.p,{children:"Function to be called with error. Takes a single parameter of type any containing the error data."}),"\n",(0,r.jsx)(s.h4,{id:"returns-5",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"void"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"setonfinalresults",children:"setOnFinalResults()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"setOnFinalResults"}),"(",(0,r.jsx)(s.code,{children:"callback"}),"): ",(0,r.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L160",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:160"})]}),"\n",(0,r.jsx)(s.p,{children:"Sets a callback function to handle final averaged results when they arrive."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,r.jsx)(s.h5,{id:"callback-2",children:"callback"}),"\n",(0,r.jsxs)(s.p,{children:["(",(0,r.jsx)(s.code,{children:"results"}),") => ",(0,r.jsx)(s.code,{children:"void"})]}),"\n",(0,r.jsx)(s.p,{children:"Function to be called with final results. Takes a single parameter of type any containing the averaged results data."}),"\n",(0,r.jsx)(s.h4,{id:"returns-6",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"void"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"setonwindowresults",children:"setOnWindowResults()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"setOnWindowResults"}),"(",(0,r.jsx)(s.code,{children:"callback"}),"): ",(0,r.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L152",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:152"})]}),"\n",(0,r.jsx)(s.p,{children:"Sets a callback function to handle window-based results as they arrive."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,r.jsx)(s.h5,{id:"callback-3",children:"callback"}),"\n",(0,r.jsxs)(s.p,{children:["(",(0,r.jsx)(s.code,{children:"results"}),") => ",(0,r.jsx)(s.code,{children:"void"})]}),"\n",(0,r.jsx)(s.p,{children:"Function to be called with window results. Takes a single parameter of type any containing the results data."}),"\n",(0,r.jsx)(s.h4,{id:"returns-7",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"void"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"startstreaming",children:"startStreaming()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"startStreaming"}),"(): ",(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.code,{children:"any"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L197",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:197"})]}),"\n",(0,r.jsx)(s.p,{children:"Starts streaming the video to the server."}),"\n",(0,r.jsx)(s.h4,{id:"returns-8",children:"Returns"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.code,{children:"any"}),">"]}),"\n",(0,r.jsx)(s.h4,{id:"throws-10",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the client is not initialized"}),"\n",(0,r.jsx)(s.h4,{id:"throws-11",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the user has no scans available in the current plan"}),"\n",(0,r.jsx)(s.h4,{id:"throws-12",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the access token is invalid"}),"\n",(0,r.jsx)(s.h4,{id:"throws-13",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the username is invalid. The user should reinitialize the client with the correct credentials. Run Client.initialize()"}),"\n",(0,r.jsx)(s.h4,{id:"throws-14",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the password is invalid. The user should reinitialize the client with the correct credentials. Run Client.initialize()"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"stopstreaming",children:"stopStreaming()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"stopStreaming"}),"(): ",(0,r.jsx)(s.code,{children:"void"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L215",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:215"})]}),"\n",(0,r.jsx)(s.p,{children:"Stops streaming the video to the server."}),"\n",(0,r.jsx)(s.h4,{id:"returns-9",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"void"})}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"uploadvideo",children:"uploadVideo()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"uploadVideo"}),"(",(0,r.jsx)(s.code,{children:"videoBlob"}),"): ",(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.code,{children:"any"}),">"]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L78",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:78"})]}),"\n",(0,r.jsx)(s.p,{children:"Uploads a video and returns the API key."}),"\n",(0,r.jsx)(s.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,r.jsx)(s.h5,{id:"videoblob",children:"videoBlob"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"Blob"})}),"\n",(0,r.jsx)(s.p,{children:"The video blob to upload"}),"\n",(0,r.jsx)(s.h4,{id:"returns-10",children:"Returns"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"Promise"}),"<",(0,r.jsx)(s.code,{children:"any"}),">"]}),"\n",(0,r.jsx)(s.p,{children:"The API key"}),"\n",(0,r.jsx)(s.h4,{id:"throws-15",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the client is not initialized"}),"\n",(0,r.jsx)(s.h4,{id:"throws-16",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the video blob is not a Blob"}),"\n",(0,r.jsx)(s.h4,{id:"throws-17",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the video blob is empty"}),"\n",(0,r.jsx)(s.h4,{id:"throws-18",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the user has no scans available in the current plan"}),"\n",(0,r.jsx)(s.h4,{id:"throws-19",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the access token is invalid"}),"\n",(0,r.jsx)(s.h4,{id:"throws-20",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the username is invalid. The user should reinitialize the client with the correct credentials. Run Client.initialize()"}),"\n",(0,r.jsx)(s.h4,{id:"throws-21",children:"Throws"}),"\n",(0,r.jsx)(s.p,{children:"If the password is invalid. The user should reinitialize the client with the correct credentials. Run Client.initialize()"}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h3,{id:"getinstance",children:"getInstance()"}),"\n",(0,r.jsxs)(s.blockquote,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"static"})," ",(0,r.jsx)(s.strong,{children:"getInstance"}),"(): ",(0,r.jsx)(s.code,{children:"Client"})]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["Defined in: ",(0,r.jsx)(s.a,{href:"https://github.com/nervotec/nervoscan-js/blob/a3e202b0aed347d51c982d0e67d7d962d141bec3/src/api/Client.ts#L41",children:"Documents/Nervotec/docusaurus/nervoscan-js/src/api/Client.ts:41"})]}),"\n",(0,r.jsx)(s.p,{children:"Gets the singleton instance of the Client class."}),"\n",(0,r.jsx)(s.h4,{id:"returns-11",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.code,{children:"Client"})})]})}function o(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>t});var i=n(6540);const r={},l=i.createContext(r);function d(e){const s=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(l.Provider,{value:s},e.children)}}}]);